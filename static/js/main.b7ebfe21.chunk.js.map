{"version":3,"sources":["App.js","components/InputCustomizado.js","components/SubmitCustomizado.js","TratadorErros.js","Autor.js","Livro.js","Home.js","serviceWorker.js","index.js"],"names":["App","react_default","a","createElement","id","href","className","react_router_dom","to","this","props","children","React","Component","InputCustomizado","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","msgErro","htmlFor","label","PubSub","subscribe","topico","erro","value","setState","error","bind","SubmitCustomizado","type","TratadorErros","obj","console","log","publish","FormularioAutor","nome","email","senha","enviaForm","assertThisInitialized","evento","preventDefault","$","ajax","url","contentType","dataType","data","JSON","stringify","success","resposta","status","publicaErros","responseJSON","beforeSend","nomeInput","campoSendoAlterado","target","onSubmit","method","components_InputCustomizado","name","onChange","salvaAlteracao","components_SubmitCustomizado","TabelaAutor","lista","map","autor","key","AutorBox","_this2","novaLista","Autor_FormularioAutor","Autor_TabelaAutor","FormularioLivro","titulo","preco","autorId","setTitulo","setPreco","setAutorId","handleLivroSubmit","e","trim","novaListagem","autores","placeholder","TabelaLivros","livros","livro","LivroAdmin","topicName","Livro_FormularioLivro","Livro_TabelaLivros","Home","Boolean","window","location","hostname","match","ReactDOM","render","react_router","src_App","exact","path","component","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b7ebfe21.chunk.js","sourcesContent":["import React from 'react';\nimport './css/pure-min.css';\nimport './css/side-menu.css';\nimport {Link} from 'react-router-dom';\n\nclass App extends React.Component {\n\n  render() {\n    // console.log(\"render\");\n    // console.log(this.state.lista);\n    return (\n      <div id=\"layout\">\n          <a href=\"#menu\" id=\"menuLink\" className=\"menu-link\">\n            \n              <span></span>\n          </a>\n\n          <div id=\"menu\">\n              <div className=\"pure-menu\">\n                  <a className=\"pure-menu-heading\" href=\"Company\">Company</a>\n\n                  <ul className=\"pure-menu-list\">\n                      <li className=\"pure-menu-item\"><Link to=\"/\" className=\"pure-menu-link\">Home</Link></li>\n                      <li className=\"pure-menu-item\"><Link to=\"/autor\" className=\"pure-menu-link\">Autor</Link></li>\n                      <li className=\"pure-menu-item\"><Link to=\"/livro\" className=\"pure-menu-link\">Livro</Link></li>\n                  </ul>\n              </div>\n          </div>\n\n          <div id=\"main\">\n            {this.props.children}                \n          </div>     \n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component } from 'react'\r\nimport PubSub from 'pubsub-js';\r\n\r\nclass InputCustomizado extends Component {\r\n\r\n    constructor(){\r\n        super();\r\n        this.state = {msgErro:''};\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"pure-control-group\">\r\n                <label htmlFor={this.props.id}>{this.props.label}</label> \r\n                <input {...this.props}/>                  \r\n                <span className=\"error\">{this.state.msgErro}</span>            \r\n            </div>\r\n        )\r\n    }\r\n\r\n    componentDidMount() {\r\n        PubSub.subscribe(\"erro-validacao\", function(topico,erro) {\r\n            // console.log(erro);\r\n            // console.log(this.props.name);\r\n            if(this.props.value === '') {\r\n                this.setState({msgErro: erro.error});\r\n            }\r\n        }.bind(this));\r\n        \r\n        PubSub.subscribe(\"limpa-erros\", function(topico) {\r\n            this.setState({msgErro: ''});\r\n        }.bind(this));\r\n    }\r\n}\r\n\r\nexport default InputCustomizado;","import React, { Component } from 'react'\r\n\r\nclass SubmitCustomizado extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"pure-control-group\">\r\n                <label></label>\r\n                <button type={this.props.type} className=\"pure-button pure-button-primary\">{this.props.label}</button>                                    \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SubmitCustomizado;\r\n","import React, { Component } from 'react'\r\nimport PubSub from 'pubsub-js';\r\n\r\nexport default class TratadorErros extends Component {\r\n\r\n    publicaErros(obj){\r\n        console.log(obj);\r\n        console.log(obj.error);\r\n        PubSub.publish(\"erro-validacao\", obj);\r\n        // for(var i=0; i<obj.error.length; i++){\r\n        //     var erro = obj.error[i];\r\n        //     console.log(erro);\r\n        // }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport $ from 'jquery';\r\nimport InputCustomizado from './components/InputCustomizado';\r\nimport SubmitCustomizado from './components/SubmitCustomizado';\r\nimport PubSub from 'pubsub-js';\r\nimport TratadorErros from './TratadorErros';\r\n\r\nclass FormularioAutor extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {nome:'',email:'',senha:''};\r\n        this.enviaForm = this.enviaForm.bind(this);\r\n    }\r\n\r\n    // submit o formulario\r\n    enviaForm(evento){\r\n        evento.preventDefault();// para que o evento não seja propagado e não recarregue a página completa\r\n        // console.log(this);\r\n        // console.log(\"dados estão sendo enviados\");\r\n        $.ajax({\r\n        url:\"http://localhost:8080/spring-postegresql/api/autor/novo\",\r\n        contentType: 'application/json',\r\n        dataType:'json',\r\n        type:'post',\r\n        data: JSON.stringify({nome:this.state.nome,email:this.state.email,senha:this.state.senha}),\r\n        success: function(resposta) {\r\n            // console.log(\"chegou resposta\");\r\n            // console.log(this);\r\n            // console.log(resposta);\r\n            // this.setState({lista: resposta});\r\n            // this.props.callbackAtualizaListagem(resposta);\r\n            PubSub.publish('atualiza-lista-autores', resposta);\r\n            this.setState({nome:'',email:'',senha:''})//limpa o formulario\r\n        }.bind(this),\r\n        error: function(resposta){\r\n            // console.log(resposta);\r\n            // console.log(\"erro\");\r\n            if(resposta.status === 500) {\r\n                //recuperar quais foram os erros\r\n                //exibir a mensagem de erro no campo - span\r\n                new TratadorErros().publicaErros(resposta.responseJSON);\r\n            }\r\n            if(resposta.status === 400) {\r\n                new TratadorErros().publicaErros(resposta.responseJSON);\r\n            }\r\n        },\r\n        beforeSend: function(){\r\n            PubSub.publish(\"limpa-erros\", {});\r\n        }\r\n        });\r\n    }\r\n\r\n    salvaAlteracao(nomeInput, evento){\r\n        var campoSendoAlterado = {};\r\n        campoSendoAlterado[nomeInput] = evento.target.value;\r\n        this.setState(campoSendoAlterado);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"pure-form pure-form-aligned\">\r\n                <form className=\"pure-form pure-form-aligned\" onSubmit={this.enviaForm} method=\"post\">\r\n                        \r\n                    <InputCustomizado id=\"nome\" type=\"text\" name=\"nome\" value={this.state.nome} onChange={this.salvaAlteracao.bind(this, 'nome')} label=\"Nome\"/>\r\n                    <InputCustomizado id=\"email\" type=\"email\" name=\"email\" value={this.state.email} onChange={this.salvaAlteracao.bind(this, 'email')} label=\"E-mail\"/>\r\n                    <InputCustomizado id=\"senha\" type=\"password\" name=\"senha\" value={this.state.senha} onChange={this.salvaAlteracao.bind(this, 'senha')} label=\"Senha\"/>\r\n                                              \r\n                    <SubmitCustomizado type=\"submit\" label=\"Gravar\"/>\r\n                        \r\n                </form>             \r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass TabelaAutor extends Component {\r\n    \r\n    render() {\r\n        return (\r\n            <div>            \r\n                <table className=\"pure-table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Nome</th>\r\n                            <th>email</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                          {\r\n                            this.props.lista.map(autor => {\r\n                              return (\r\n                                <tr key={autor.id}>\r\n                                  <td>{autor.nome}</td>\r\n                                  <td>{autor.email}</td>\r\n                                </tr>\r\n                              );\r\n                            })\r\n                          }\r\n                    </tbody>\r\n                </table> \r\n            </div> \r\n        )\r\n    }\r\n}\r\n\r\nclass AutorBox extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {lista : []};\r\n    }\r\n    \r\n    // função antes do render ser chamado pela 1 vez\r\n    componentWillMount() {\r\n        // console.log(\"WillMount\");\r\n    }\r\n    \r\n    // component acabou de ser montado, logo quando o render é envocado pela 1 vez essa função é chamado\r\n    componentDidMount() {\r\n        // console.log(\"DidMount\");\r\n        $.ajax({\r\n            url:\"http://localhost:8080/spring-postegresql/api/autores\",\r\n            dataType: 'json',\r\n            success: function(resposta) {\r\n              // console.log(\"chegou agora\");\r\n              // console.log(this);\r\n              // console.log(resposta);\r\n              this.setState({lista: resposta});\r\n            }.bind(this),\r\n            error: function(resposta){\r\n              console.log(resposta);\r\n              console.log(\"erro\");\r\n            }\r\n        });\r\n\r\n        PubSub.subscribe('atualiza-lista-autores', function(topico, novaLista) {\r\n            this.setState({lista:novaLista});\r\n        }.bind(this));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n\r\n            <div className=\"header\">\r\n              <h1>Cadastro de Autores</h1>\r\n            </div>\r\n            <div className=\"content\" id=\"content\"> \r\n                <FormularioAutor/>\r\n                <TabelaAutor lista={this.state.lista}/>\r\n                \r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AutorBox;\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport $ from \"jquery\";\r\nimport InputCustomizado from \"./components/InputCustomizado\";\r\nimport PubSub from 'pubsub-js';\r\nimport TratadorErros from './TratadorErros';\r\n\r\nclass FormularioLivro extends Component {\r\n\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {titulo: '', preco: '', autorId: ''};\r\n      this.setTitulo = this.setTitulo.bind(this);\r\n      this.setPreco = this.setPreco.bind(this);\r\n      this.setAutorId = this.setAutorId.bind(this);   \r\n      this.handleLivroSubmit = this.handleLivroSubmit.bind(this);\r\n    }\r\n  \r\n    setTitulo(e) {\r\n      this.setState({titulo: e.target.value});\r\n    }\r\n  \r\n    setPreco(e) {\r\n      this.setState({preco: e.target.value});\r\n    }\r\n  \r\n    setAutorId(e) {\r\n      this.setState({autorId: e.target.value});\r\n    }\r\n  \r\n  \r\n    handleLivroSubmit(e) {\r\n      e.preventDefault();\r\n      var titulo = this.state.titulo.trim();\r\n      var preco = this.state.preco.trim();\r\n      var autorId = this.state.autorId;\r\n  \r\n      $.ajax({\r\n        url: 'http://cdc-react.herokuapp.com/api/livros',\r\n        contentType: 'application/json',\r\n        dataType: 'json',\r\n        type: 'POST',\r\n        data: JSON.stringify({titulo:titulo,preco:preco,autorId:autorId}),\r\n        success: function(novaListagem) {\r\n            PubSub.publish( 'atualiza-lista-livros',novaListagem);            \r\n            this.setState({titulo:'',preco:'',autorId:''});\r\n        },\r\n        error: function(resposta){\r\n          if(resposta.status === 400){\r\n            new TratadorErros().publicaErros(resposta.responseJSON);\r\n          }\r\n        },\r\n        beforeSend: function(){\r\n          PubSub.publish(\"limpa-erros\",{});\r\n        }            \r\n      });  \r\n  \r\n      this.setState({titulo: '', preco: '', autorId: ''});\r\n    }\r\n  \r\n    render() {\r\n      var autores = this.props.autores.map(function(autor){\r\n        return <option key={autor.id} value={autor.id}>{autor.nome}</option>;\r\n      });\r\n      return (\r\n        <div className=\"autorForm\">\r\n          <form className=\"pure-form pure-form-aligned\" onSubmit={this.handleLivroSubmit}>\r\n            <InputCustomizado id=\"titulo\" name=\"titulo\" label=\"Titulo: \" type=\"text\" value={this.state.titulo} placeholder=\"Titulo do livro\" onChange={this.setTitulo} />\r\n            <InputCustomizado id=\"preco\" name=\"preco\" label=\"Preco: \" type=\"decimal\" value={this.state.preco} placeholder=\"Preço do livro\" onChange={this.setPreco} />\r\n            <div className=\"pure-controls\">\r\n              <select value={this.state.autorId} name=\"autorId\" onChange={this.setAutorId}>\r\n                <option value=\"\">Selecione Autor</option>\r\n                {autores}\r\n              </select>\r\n            </div>\r\n            <div className=\"pure-control-group\">                                  \r\n              <label></label> \r\n              <button type=\"submit\" className=\"pure-button pure-button-primary\">Gravar</button>                                    \r\n            </div>          \r\n          </form>             \r\n        </div>\r\n      );\r\n    }\r\n  } \r\n  \r\nclass TabelaLivros extends Component {\r\n  \r\n    render() {\r\n      var livros = this.props.lista.map(function(livro){\r\n        return(\r\n            <tr key={livro.titulo}>\r\n              <td>{livro.titulo}</td>\r\n              <td>{livro.autor.nome}</td>\r\n              <td>{livro.preco}</td>\r\n            </tr>\r\n          );\r\n        });\r\n      return(\r\n        <table className=\"pure-table\">\r\n          <thead>\r\n            <tr>\r\n              <th>Titulo</th>\r\n              <th>Autor</th>\r\n              <th>Preco</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {livros}\r\n          </tbody>\r\n        </table>\r\n      );\r\n    }\r\n  }\r\n  \r\nclass LivroAdmin extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {lista : [],autores:[]};\r\n    }\r\n  \r\n    componentDidMount() {\r\n      $.ajax({\r\n        url: \"http://cdc-react.herokuapp.com/api/livros\",\r\n        dataType: 'json',\r\n        success: function(data) {\r\n          this.setState({lista: data});\r\n        }.bind(this)\r\n      });\r\n  \r\n      $.ajax({\r\n        url: \"http://cdc-react.herokuapp.com/api/autores\",\r\n        dataType: 'json',\r\n        success: function(data) {\r\n          this.setState({autores: data});\r\n        }.bind(this)\r\n      });\r\n  \r\n      PubSub.subscribe('atualiza-lista-livros', function(topicName,lista){\r\n        this.setState({lista:lista});\r\n      }.bind(this));    \r\n    }\r\n  \r\n  \r\n    render() {\r\n      return(\r\n        <div>\r\n          <div className=\"header\">\r\n            <h1>Cadastro de Livros</h1>\r\n          </div>\r\n          <div className=\"content\" id=\"content\">\r\n            <FormularioLivro autores={this.state.autores}/>\r\n            <TabelaLivros lista={this.state.lista}/>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\nexport default LivroAdmin;\r\n","import React, { Component } from 'react'\r\n\r\nclass Home extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"header\">\r\n              <h1>Bem Vindo ao Sistema</h1>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport AutorBox from './Autor';\nimport LivroAdmin from './Livro';\nimport Home from './Home';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter, Switch, Route} from 'react-router-dom';\n\nReactDOM.render(\n    (\n    <BrowserRouter>\n        <Switch>\n            <App>\n                <Route exact path=\"/\" component={Home} />\n                <Route path=\"/autor\" component={AutorBox}/>\n                <Route path=\"/livro\" component={LivroAdmin}/>\n            </App>\n        </Switch>\n    </BrowserRouter>\n    ),\n    document.getElementById('root')\n);\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}